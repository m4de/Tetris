class Tetromino {

  field Square s0;
  field Square s1;
  field Square s2;
  field Square s3;

  field int type;
  field int orientation;

  /** Constructs a new tetromino of the specified type. */
  constructor Tetromino new(int t) {
    let orientation = 0;
    let type = t;
    do setType();
    do draw();
    return this;
  }

  /** Disposes this tetromino. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  /** Gets the tetromino type. */
  method int getType() {
    return type;
  }

  /** Returns the orientation of the tetromino */
  method int getOrientation() {
    return orientation;
  }

  method void setType() {
    var int x;
    var int y;
    let x = 3;
    let y = 1;
    if (type = 0) {
      let x = x + 1;
      let y = 1;
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x, y + 1);
      let s3 = Square.new(x + 1, y + 1);
    }
    if (type = 1) {
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x + 2, y);
      let s3 = Square.new(x + 3, y);
    }
    if (type = 2) {
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x + 2, y);
      let s3 = Square.new(x + 1, y + 1);
    }
    if (type = 3) {
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x + 2, y);
      let s3 = Square.new(x + 2, y + 1);
    }
    if (type = 4) {
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x + 2, y);
      let s3 = Square.new(x, y + 1);
    }
    if (type = 5) {
      let s0 = Square.new(x + 1, y);
      let s1 = Square.new(x + 2, y);
      let s2 = Square.new(x, y + 1);
      let s3 = Square.new(x + 1, y + 1);
    }
    if (type = 6) {
      let s0 = Square.new(x, y);
      let s1 = Square.new(x + 1, y);
      let s2 = Square.new(x + 1, y + 1);
      let s3 = Square.new(x + 2, y + 1);
    }
    return;
  }

  /** Draws the tetromino on the screen. */
  method void draw() {
    do s3.draw();
    do s2.draw();
    do s1.draw();
    do s0.draw();
    return;
  }

  /** Erases the tetromino from the screen. */
  method void erase() {
    do s0.erase();
    do s1.erase();
    do s2.erase();
    do s3.erase();
    return;
  }

  /** Moves the tetromino by one square in the given direction. */
  method void move(int direction) {
    do erase();
    if (direction = 3) {
      do s0.setX(s0.getX() - 1);
      do s1.setX(s1.getX() - 1);
      do s2.setX(s2.getX() - 1);
      do s3.setX(s3.getX() - 1);
    }
    if (direction = 4) {
      do s0.setX(s0.getX() + 1);
      do s1.setX(s1.getX() + 1);
      do s2.setX(s2.getX() + 1);
      do s3.setX(s3.getX() + 1);
    }
    if (direction = 2) {
      do s3.setY(s3.getY() + 1);
      do s2.setY(s2.getY() + 1);
      do s1.setY(s1.getY() + 1);
      do s0.setY(s0.getY() + 1);
    }
    do draw();
    return;
  }

  method Array getSquares() {
    var Array squares;
    let squares = Array.new(4);
    let squares[0] = s0;
    let squares[1] = s1;
    let squares[2] = s2;
    let squares[3] = s3;
    return squares;
  }

  /** Rotates the tetromino. */
  method void rotate() {
    var int x;
    var int y;
    let x = s0.getX();
    let y = s0.getY();
    do erase();
    if (type = 1) {
      if (orientation = 0) {
        do s0.setY(y - 2);
        do s1.setX(x);
        do s1.setY(y - 1);
        do s2.setX(x);
        do s2.setY(y);
        do s3.setX(x);
        do s3.setY(y + 1);
        let orientation = 1;
      } else {
        do s0.setY(y + 2);
        do s1.setX(x + 1);
        do s1.setY(y + 2);
        do s2.setX(x + 2);
        do s2.setY(y + 2);
        do s3.setX(x + 3);
        do s3.setY(y + 2);
        let orientation = 0;
      }
    }
    if (type = 2) {
      if (orientation = 0) {
        do s0.setX(x + 1);
        do s0.setY(y - 1);
        do s1.setX(x);
        do s1.setY(y);
        do s2.setX(x + 1);
        do s2.setY(y);
        do s3.setX(x + 1);
        do s3.setY(y + 1);
        let orientation = 1;
      } else {
        if (orientation = 1) {
          do s1.setX(x - 1);
          do s1.setY(y + 1);
          do s2.setX(x);
          do s2.setY(y + 1);
          do s3.setX(x + 1);
          do s3.setY(y + 1);
          let orientation = 2;
        } else {
          if (orientation = 2) {
            do s1.setX(x );
            do s1.setY(y + 1);
            do s2.setX(x + 1);
            do s2.setY(y + 1);
            do s3.setX(x);
            do s3.setY(y + 2);
            let orientation = 3;
          } else {
            if (orientation = 3) {
              do s0.setX(x - 1);
              do s0.setY(y + 1);
              do s1.setX(x);
              do s1.setY(y + 1);
              do s2.setX(x + 1);
              do s2.setY(y + 1);
              do s3.setX(x);
              do s3.setY(y + 2);
              let orientation = 0;
            }
          }
        }
      }
    }
    if (type = 3) {
      if (orientation = 0) {
        do s0.setX(x + 1);
        do s0.setY(y - 1);
        do s1.setX(x + 1);
        do s1.setY(y);
        do s2.setX(x);
        do s2.setY(y + 1);
        do s3.setX(x + 1);
        do s3.setY(y + 1);
        let orientation = 1;
      } else {
        if (orientation = 1) {
          do s0.setX(x - 1);
          do s1.setX(x - 1);
          do s1.setY(y + 1);
          do s2.setX(x);
          do s2.setY(y + 1);
          do s3.setX(x + 1);
          do s3.setY(y + 1);
          let orientation = 2;
        } else {
          if (orientation = 2) {
            do s0.setX(x + 1);
            do s1.setX(x + 2);
            do s1.setY(y);
            do s2.setX(x + 1);
            do s2.setY(y + 1);
            do s3.setX(x + 1);
            do s3.setY(y + 2);
            let orientation = 3;
          } else {
            if (orientation = 3) {
              do s0.setX(x - 1);
              do s0.setY(y + 1);
              do s1.setX(x);
              do s1.setY(y + 1);
              do s2.setX(x + 1);
              do s2.setY(y + 1);
              do s3.setX(x + 1);
              do s3.setY(y + 2);
              let orientation = 0;
            }
          }
        }
      }
    }
    if (type = 4) {
      if (orientation = 0) {
        do s0.setY(y - 1);
        do s1.setX(x + 1);
        do s1.setY(y - 1);
        do s2.setX(x + 1);
        do s2.setY(y);
        do s3.setX(x + 1);
        do s3.setY(y + 1);
        let orientation = 1;
      } else {
        if (orientation = 1) {
          do s0.setX(x + 2);
          do s1.setX(x);
          do s1.setY(y + 1);
          do s2.setX(x + 1);
          do s2.setY(y + 1);
          do s3.setX(x + 2);
          do s3.setY(y + 1);
          let orientation = 2;
        } else {
          if (orientation = 2) {
            do s0.setX(x - 1);
            do s1.setX(x - 1);
            do s1.setY(y + 1);
            do s2.setX(x - 1);
            do s2.setY(y + 2);
            do s3.setX(x);
            do s3.setY(y + 2);
            let orientation = 3;
          } else {
            if (orientation = 3) {
              do s0.setX(x - 1);
              do s0.setY(y + 1);
              do s1.setX(x);
              do s1.setY(y + 1);
              do s2.setX(x + 1);
              do s2.setY(y + 1);
              do s3.setX(x - 1);
              do s3.setY(y + 2);
              let orientation = 0;
            }
          }
        }
      }
    }
    if (type = 5) {
      if (orientation = 0) {
        do s0.setX(x - 1);
        do s0.setY(y - 1);
        do s1.setX(x - 1);
        do s1.setY(y);
        do s2.setX(x);
        do s2.setY(y);
        do s3.setX(x);
        do s3.setY(y + 1);
        let orientation = 1;
      } else {
        do s0.setX(x + 1);
        do s0.setY(y + 1);
        do s1.setX(x + 2);
        do s1.setY(y + 1);
        do s2.setX(x);
        do s2.setY(y + 2);
        do s3.setX(x + 1);
        do s3.setY(y + 2);
        let orientation = 0;
      }
    }
    if (type = 6) {
      if (orientation = 0) {
        do s0.setX(x + 1);
        do s1.setX(x);
        do s1.setY(y + 1);
        do s2.setX(x + 1);
        do s2.setY(y + 1);
        do s3.setX(x);
        do s3.setY(y + 2);
        let orientation = 1;
      } else {
        do s0.setX(x - 1);
        do s1.setX(x);
        do s1.setY(y);
        do s2.setX(x);
        do s2.setY(y + 1);
        do s3.setX(x + 1);
        do s3.setY(y + 1);
        let orientation = 0;
      }
    }
    do draw();
    return;
  }
}
