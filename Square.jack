/** Implements a graphical square. */
class Square {

  field int size; // length of this square, in pixels
  field int xpos, ypos; // position of the square in the 10*18 grid

  field int xOffset;
  field int yOffset;

  /** Constructs a new square with a given location and size. */
  constructor Square new(int Axpos, int Aypos) {
    let size = 14;
    let xOffset = 186;
    let yOffset = 3;
    let xpos = Axpos;
    let ypos = Aypos;
    return this;
  }

  /** Disposes this square. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  /** Draws the square on the screen. */
  method void draw() {
    var int x;
    var int y;
    let x = xOffset + (xpos * size);
    let y = yOffset + (ypos * size);
    do Screen.setColor(true);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  /** Erases the square from the screen. */
  method void erase() {
    var int x;
    var int y;
    let x = xOffset + (xpos * size);
    let y = yOffset + (ypos * size);
    do Screen.setColor(false);
    do Screen.drawRectangle(x, y, x + size, y + size);
    return;
  }

  /** Moves the square down by `size` pixels. */
  method void moveDown() {
    do erase();
    let ypos = ypos + 1;
    do draw();
    return;
  }

  /** Moves the square left by `size` pixels. */
  method void moveLeft() {
    do erase();
    let xpos = xpos - 1;
    do draw();
    return;
  }

  /** Moves the square right by `size` pixels. */
  method void moveRight() {
    do erase();
    let xpos = xpos + 1;
    do draw();
    return;
  }

  method int getXpos() {
    return xpos;
  }

  method int getYpos() {
    return ypos;
  }

  method void setXpos(int xpo) {
    let xpos = xpo;
    return;
  }

  method void setYpos(int ypo) {
    let ypos = ypo;
    return;
  }
}
